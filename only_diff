#!/usr/bin/env ruby

def files_changed
  return @files_changed if defined? @files_changed

  head_branch = ARGV[1] || 'main'
  commit_base = `git merge-base HEAD #{head_branch}`

  @files_changed = `git diff --name-only HEAD..#{commit_base}`.split("\n")
end

def rspec
  %x(bundle exec rspec #{files_changed} -f p)
end

def mini_test
  prefix_test = ARGV[2] || 'test/'

  files_changed.each do |file|
    next unless file.include?(prefix_test)

    puts "Testing file: #{file}"

    %x(bundle exec m #{file})
  end
end

def rubocop
  %x(rubocop --color #{files_changed} -a)
end

def show_files_changed
  puts files_changed
  puts "#{files_changed.size} files changed"
end

def execute(command)
  if files_changed.empty?
    puts 'No files changed'
    return
  end

  case ARGV[0]
  when 'rspec'         then rspec
  when 'mini_test'     then mini_test
  when 'rubocop'       then rubocop
  when 'files_changed' then show_files_changed
  else
    puts 'Invalid command'
  end
end

execute(ARGV[0])
